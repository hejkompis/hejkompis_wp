/*************************************************************
BACKEND SCRIPTS

COLOR WIDGETS
CUSTOM META BOX
RESET SETTINGS
SLIDER ORDER
AJAX DELETE SLIDER ITEM
UPLOAD SCRIPT
COLORPICKER
GOOGLE WEBFONTS
HELP
ALIGN HEADER ELEMENTS AUTOMATICALLY

*************************************************************/

/*************************************************************
COLOR WIDGETS
*************************************************************/

	jQuery(document).ready(function($) {
		//color widget area
		$('#sidebar_widget_area').closest('.widgets-holder-wrap').children('.sidebar-name').children('h3').css({
			'backgroundColor': '#b0493f',
			'color': 'white',
			'text-shadow': 'none'
		});

		//color widgets
		$('.widget').each(function(index, e) {
			$this = $(this);
			if ($this.attr('id')) {		//this check to comply with Ether Content Builder Plugin
				if ($this.attr('id').indexOf('inspire_sidebar') != -1) $this.find('.widget-title').css({
					'backgroundColor': '#b0493f',
					'color': 'white',
					'text-shadow': 'none'
				});
			}
		});

	});


/*************************************************************
CUSTOM META BOX
*************************************************************/

	jQuery(document).ready(function($) {

		//auto generate buttons
		$('.auto_generate').on('click', function () {
			$this = $(this);
			var autoGeneratedContent =  $this.val();
			var tagName = $this.prev().prop('tagName');
			if (tagName == "INPUT") {
				$this.prev().val(autoGeneratedContent);
			} else if (tagName == "TEXTAREA") {
				$this.prev().text(autoGeneratedContent);
			}
		});

		//cmb slider options popup
		if (!$('#cmb_slider_feature').attr('checked')) $('#popup_cmb_slider_options').hide();

		$('#cmb_slider_feature').on('click', function() {
			$('#popup_cmb_slider_options').slideToggle('slow');
		});


	});


/*************************************************************
RESET SETTINGS
*************************************************************/

	jQuery(document).ready(function($) {

		$('#reset_all_button').on('click', function() {
			var conf = confirm("WARNING: You are about to reset all theme settings!");
			if (conf === true) {
				$('#reset_all').val('RESET');
			}
		});
	});

/*************************************************************
SLIDER ORDER
*************************************************************/


	jQuery(document).ready(function($) {

		//SLIDER SORT
		$("#slider_items_list").sortable({
			update : function () {
				var order = $('#slider_items_list').sortable('toArray');
				$("#slider_order").attr('value', order);
			}
		});
	});


/*****************************************
AJAX DELETE SLIDER ITEM
*****************************************/

	jQuery(document).ready(function($) {

		$('.del_item').on('click', function () {
			$this = $(this);
			var itemId = $this.attr('data-item_id');
			var nonce = $this.attr('data-nonce');

			$.ajax({
				type: 'post',
				dataType: 'json',
				url: extDataDel.ajaxUrl,
				data: {action: 'del_slider_item', item_id: itemId, nonce: nonce},
				success: function(response) {
					$('#' + itemId).remove();
				}

			}); //end ajax
				
		}); //end click

	});



/*****************************************
UPLOAD SCRIPT
*****************************************/

	//if you make an input type='button' with the class='upload button' then this script will activate it and put the image URL in the previous input box
	jQuery(document).ready(function($) {
		if ($('.upload.button').size() > 0) {

			$('.upload.button').on('click', function () {
				$this = $(this);
				$urlField = $this.prev('input');
				var buttonVal = $this.val().toUpperCase();
				var buttonId = $this.attr('id');
				var referer = "";

				//set referer for each button
				//also set in functions.php in the media upload customize section
				if (buttonId == "upload_logo_button") referer = "inspire_logo";
				if (buttonId == "upload_favicon_button") referer = "inspire_favicon";
				if (buttonId == "upload_bg_button") referer = "inspire_bg";

		        tb_show(buttonVal, 'media-upload.php?referer=' + referer + '&type=image&TB_iframe=true&post_id=0', false);  
			});

			window.send_to_editor = function(html) {  
			    var image_url = $('img',html).attr('src');  
			   	$urlField.val(image_url); 
			    tb_remove();  
			};
		}
	});


/*****************************************
COLORPICKER
*****************************************/

	jQuery(document).ready(function($) {

		$('.colorSelectorBox').each(function (index, e) {
			$this = $(this);
			$relatedInput = $this.closest('td').prev('td').children('input');
			var controllerID = $this.attr('id');
			var relatedInputID = $relatedInput.attr('id');
			$this.ColorPicker({
				color: $relatedInput.val(),
				onShow: function (colpkr) {
					$(colpkr).fadeIn(500);
					return false;
				},
				onHide: function (colpkr) {
					$(colpkr).fadeOut(500);
					return false;
				},
				onChange: function (hsb, hex, rgb) {
					$('#' + controllerID + ' div').css('backgroundColor', '#' + hex);
					$('#' + relatedInputID).val("#" + hex);
				}
			});
				
		});
	});


/*****************************************
GOOGLE WEBFONTS
*****************************************/

	jQuery(document).ready(function($) {

		if (typeof extDataFonts != 'undefined') {

			// console.log(extDataFonts.fonts.items[0].family);

			$('.inspire_webfonts_controller').each(function(index, e) {
				//GET VARS				
				$thisController = $(this);
				$selectFamily = $thisController.find('.inspire_font_family');
				$selectVariant = $thisController.find('.inspire_font_variant');
				$selectSubset = $thisController.find('.inspire_font_subset');
				var selectedFamily = $selectFamily.attr('data-selected');
				var selectedVariant = $selectVariant.attr('data-selected');
				var selectedSubset = $selectSubset.attr('data-selected');
				var selectedKey = 0;
				var optionFamilyHTML = "";
				var optionVariantHTML = "";
				var optionSubsetHTML = "";

			/*****************************************
			BUILD SELECTS
			*****************************************/
				//BUILD FAMILY SELECT
				for (i = 0; i < extDataFonts.fonts.items.length; i++) {
					if (extDataFonts.fonts.items[i].family == selectedFamily) {
						optionFamilyHTML = "<option value='"+ extDataFonts.fonts.items[i].family +"' selected='selected'>"+ extDataFonts.fonts.items[i].family +"</option>";
						selectedKey = i;
					} else {
						optionFamilyHTML = "<option value='"+ extDataFonts.fonts.items[i].family +"'>"+ extDataFonts.fonts.items[i].family +"</option>";
					}
					$selectFamily.append(optionFamilyHTML);
				}

				//clear out select
				$selectVariant.empty();
				$selectSubset.empty();

				//build variants select
				for (i = 0; i < extDataFonts.fonts.items[selectedKey].variants.length; i++) {
					if (extDataFonts.fonts.items[selectedKey].variants[i] == selectedVariant) {
						optionVariantHTML = "<option value='"+ extDataFonts.fonts.items[selectedKey].variants[i] +"' selected='selected'>"+ extDataFonts.fonts.items[selectedKey].variants[i] +"</option>";
					} else {
						optionVariantHTML = "<option value='"+ extDataFonts.fonts.items[selectedKey].variants[i] +"'>"+ extDataFonts.fonts.items[selectedKey].variants[i] +"</option>";
					}
					$selectVariant.append(optionVariantHTML);
				}

				//build subsets select
				for (i = 0; i < extDataFonts.fonts.items[selectedKey].subsets.length; i++) {
					if (extDataFonts.fonts.items[selectedKey].subsets[i] == selectedSubset) {
						optionSubsetHTML = "<option value='"+ extDataFonts.fonts.items[selectedKey].subsets[i] +"' selected='selected'>"+ extDataFonts.fonts.items[selectedKey].subsets[i] +"</option>";
					} else {
						optionSubsetHTML = "<option value='"+ extDataFonts.fonts.items[selectedKey].subsets[i] +"'>"+ extDataFonts.fonts.items[selectedKey].subsets[i] +"</option>";
					}
					$selectSubset.append(optionSubsetHTML);
				}


			/*****************************************
			ON CHANGE
			*****************************************/
				//ON FAMILY CHANGE EVENT
				$selectFamily.on('change', function () {
						$thisFamilySelect = $(this);
						$relatedVariantSelect = $thisFamilySelect.closest('tr').find('.inspire_font_variant');
						$relatedSubsetSelect = $thisFamilySelect.closest('tr').find('.inspire_font_subset');
						var selectedOption = $thisFamilySelect.val();
						var currentKey = 0;
						//first get the array key
						for (i = 0; i < extDataFonts.fonts.items.length; i++) {
							if (extDataFonts.fonts.items[i].family == selectedOption) currentKey = i;
						}

						//clear out select
						$relatedVariantSelect.empty();
						$relatedSubsetSelect.empty();

						//build variants select
						for (i = 0; i < extDataFonts.fonts.items[currentKey].variants.length; i++) {
							if (extDataFonts.fonts.items[currentKey].variants[i] == selectedVariant) {
								optionVariantHTML = "<option value='"+ extDataFonts.fonts.items[currentKey].variants[i] +"' selected='selected'>"+ extDataFonts.fonts.items[currentKey].variants[i] +"</option>";
							} else {
								optionVariantHTML = "<option value='"+ extDataFonts.fonts.items[currentKey].variants[i] +"'>"+ extDataFonts.fonts.items[currentKey].variants[i] +"</option>";
							}
							$relatedVariantSelect.append(optionVariantHTML);
						}

						//build subsets select
						for (i = 0; i < extDataFonts.fonts.items[currentKey].subsets.length; i++) {
							if (extDataFonts.fonts.items[currentKey].subsets[i] == selectedSubset) {
								optionSubsetHTML = "<option value='"+ extDataFonts.fonts.items[currentKey].subsets[i] +"' selected='selected'>"+ extDataFonts.fonts.items[currentKey].subsets[i] +"</option>";
							} else {
								optionSubsetHTML = "<option value='"+ extDataFonts.fonts.items[currentKey].subsets[i] +"'>"+ extDataFonts.fonts.items[currentKey].subsets[i] +"</option>";
							}
							$relatedSubsetSelect.append(optionSubsetHTML);
						}

				});

			});

		}

	});


/*****************************************
HELP
*****************************************/

	jQuery(document).ready(function($) {

		//main help toggle
		$('h3 img').on('click', function(index, e) {
			$this = $(this);
			$helpDiv = $this.closest('h3').next('div');
			$helpDiv.slideToggle('fast');
		});

	});


/*************************************************************
ALIGN HEADER ELEMENTS AUTOMATICALLY
*************************************************************/

	(function($){
	   $(window).load(function(){

	   		//show on load
	   		$autoButton = $('#auto_header_content_pos');
	   		$autoButton.show();

	   		$autoButton.on('click', function () {
	   			$this = $(this);
	   				
		   		$logo = $this.prev('img');
		    	var headerHeight = $('#header_height').val();
		    	var logoHeight	= $logo.height();
		    	var navHeight = 17;

		    	var logoTopPos = Math.round((headerHeight/2) - (logoHeight/2));
		    	var navTopPos = Math.round((headerHeight/2) - (navHeight/2));

		    	//update values
		    	$('#pos_logo_top').val(logoTopPos);
		    	$('#pos_nav_top').val(navTopPos);

	   		});

	   });
	})(jQuery); 
